@startuml
skinparam monochrome true
skinparam classAttributeIconSize 0
actor User
participant "App" as A
participant "VectorFieldWidget:m_VectorField" as B
participant "Arrow:arrow" as C
participant "Timer:m_Timer" as D
participant "PeriodicDataGenerator" as E
User -> A : main()
activate A
A -> A : launch()
activate A
A -> A : start()
Activate A

A -> A : initializeRootPane()
A -> A : initializeChildrenPanes()
A -> A : initializeParametersHolder()
A -> A : addXminToParametersHolder()
A -> A : addXmaxToParametersHolder()
A -> A : addYminToParametersHolder()
A -> A : addYmaxToParametersHolder()
A -> A : addDeltaXminToParametersHolder()
A -> A : addDeltaXmaxToParametersHolder()
A -> A : addDeltaYminToParametersHolder()
A -> A : addDeltaYmaxToParametersHolder()
A -> A : addNumOfPointsToParametersHolder()
A -> A : addParametersHolderToParametersPane()
A -> A : addAppModeComboBoxToParametersHolder()
A -> A : addRefreshingRateToParametersHolder()
A -> A : addScalingFactorToParametersHolder()
A -> A : parseParametersFromGuiControls()
A -> A : initializeVectorField()
activate A
A -> B **: VectorFieldWidget()
activate B
B -> B : initPlotAndAxisNames()
B -> B : initFontSizes()
B -> B : setInitialMinAndMaxValues()
B -> B : initParrentPane()
B -> B : initVectorFieldData()
B -> B : initVectorField()
activate B
B -> B : initSpacers()
B -> B : initPlotName()
B -> B : initYAxis()
activate B
B -> B : initYAxisLabel()
B -> B : initYLabelBox()
B -> B : initYTickLabelSpacers()
B -> B : setYTicksText()
B -> B : setYTicksTextPosition()
B -> B : setYTicksTextFont()
B -> B : initYTicksLabelBox()
B -> B : initYTicksSpacers()
B -> B : initYTickDrawing()
B -> B : setYTickDrawingLength()
B -> B : setYTickDrawingWidth()
B -> B : initYTicksBox()
deactivate B
B -> B : initXAxis()
activate B
B -> B : initXAxisLabel()
B -> B : initXLabelBox()
B -> B : initXTickLabelSpacers()
B -> B : setXTicksText()
B -> B : setXTicksTextPosition()
B -> B : setXTicksTextFont()
B -> B : setXTicksLabelBox()
B -> B : initXTicksSpacers()
B -> B : initXTicksDrawing()
B -> B : setXTickDrawingLength()
B -> B : setXTickDrawingWidth()
B -> B : initXTicksBox()
deactivate B
B -> B : initColorBar()
activate B
B -> B : initColorBarSpacers()
B -> B : setColorBarTicksText()
B -> B : setColorBarTicksTextPosition()
B -> B : setColorBarTicksTextFont()
B -> B : setColorBarTicksLabelBox()
B -> B : initColorBarGradient()
B -> B : drawColorBar()
B -> B : intiColorBarSpacer()
deactivate B
B -> B : initPlotAxesRectangle()
activate B
B -> B : drawAxisRectangle()
B -> B : putAxisRectangleIntoPlottingArea()
deactivate B

B -> B : initCanvas()
deactivate B
B ->> A
deactivate B
deactivate A
A -> A : setModesComboBoxOnAction()
A -> A : setXminCtrlOnAction()
A -> A : setXmaxCtrlOnAction()
A -> A : setYminCtrlOnAction()
A -> A : setYmaxCtrlOnAction()
A -> A : setDeltaXminCtrlOnAction()
A -> A : setDeltaXmaxCtrlOnAction()
A -> A : setDeltaYminCtrlOnAction()
A -> A : setDeltaYmaxCtrlOnAction()
A -> A : setNumberOfPointsOnAction()
A -> A : setScalingFactorOnAction()
A -> A : setRefreshinRateOnAction()
A -> A : initializeStage()
activate A
A -> B : setWidth()
B ->> A
A -> B : setHeight()
B ->> A
A -> B : plotVectorField()
activate B
B -> B : adjustSpacersForPlotting()
B -> B : setPlotAxesRectangleAndColorBarDimensions()
B -> B : setXTicksText()
B -> B : setXTicksTextPosition()
B -> B : putXTicksTextToLabelBox()
B -> B : setYTicksText()
B -> B : setYTicksTextPosition()
B -> B : putYTicksTextToLabelBox()
B -> B : setColorBarTicksText()
B -> B : setColorBarTicksTextPosition()
B -> B : putColorBarTicksTextToLabelBox()
B -> B : transformVectorFieldData()

B -> B : drawVectors()
activate B
loop for all points
    B -> C **: Arrow()
end
deactivate B
B ->> A
deactivate B
deactivate A
deactivate A
A -->> User
deactivate A
deactivate A
User -> A : toggles the Mode

A -> A : onActoion()
activate A
alt Mode == Continuous Generation 
A -> D **: Timer()
activate D
D -> E ** : PeriodicDataGenerator()
E -> A : parseParametersFromGuiControls()
A ->> E
E ->> D
D -> D : schedule()
loop forever
D -> E : run()
activate E
E -> B : setScaleFactor()
B ->> E
E -> A : generateVectorFieldData()
A ->> E
E -> B : setVectorFieldData()
B ->> E
E -> B : plotVectorField()
B ->> E
E -->> D
deactivate E
end
D --> A
else Mode == Single Shot
A -> D : cancel()
D ->> A
deactivate D
end

@enduml